image: node:10.21.0
stages:
   - test

cache:
  paths:
    - node_modules/

# install_dependencies:
#   stage: build
#   script:
    # - npm install -g @angular/cli@9.1.11
    # - npm install
    # - npm rebuild
    # - export CHROME_BIN=/usr/bin/google-chrome
    # - cd  /usr/bin/google-chrome && ls
    # - chmod +x ./build.sh
    # - node -v
    # - if [ -f /.dockerenv ]; then echo "docker-executor"; fi
    # - ls
    # # - cd ./node_modules && ls
    # # - cd ./.bin && ls 
    # - bash build.sh
    # - ls
    # - cd ./dist && ls
    # - cd bundles && ls
    # - cd wmapp && ls
    # - cd scripts && ls
    
test:
  stage: test
  script:
    # Add Google Chrome to aptitude's (package manager) sources
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | tee -a /etc/apt/sources.list
    # Fetch Chrome's PGP keys for secure installation
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    # Update aptitude's package sources
    - apt-get -qq update -y
    # Install latest Chrome stable, Xvfb packages
    - apt-get -qq install -y google-chrome-stable xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
    # Launch Xvfb
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    # Export display for Chrome
    - export DISPLAY=:99
    - npm install -g @angular/cli@9.1.11
    - npm install
    # - bash build.sh
    - ng t @wm/variables --code-coverage --watch=false --no-sandbox && ng t @wm/mobile/components/basic --code-coverage --watch=false --no-sandbox 

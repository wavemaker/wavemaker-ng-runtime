{"version":3,"file":"oAuth.utils.js","sourceRoot":"./","sources":["src/util/oAuth.utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AAEtE,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,GAAQ,EAAE,UAAe,EAAE,SAAc,EAAE,OAAY,EAAE,WAAiB;IAC3G,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,qBAAqB,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,CAAC,kBAAkB,EAAE,EAAE,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;AACxJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,QAAa,EAAE,iBAAsB;IAChE,OAAO,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,cAAc,KAAI,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AACpG,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,QAAa;IAC3C,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AAC7C,CAAC,CAAA","sourcesContent":["import { oauthService, appManager } from './variable/variables.utils';\n\nexport const performAuthorization = (url: any, providerId: any, onSuccess: any, onError: any, securityObj?: any) => {\n    oauthService?.perfromOAuthorization(url, providerId, onSuccess, onError, securityObj, appManager.getCustomUrlScheme(), appManager.getDeployedURL());\n};\n\nexport const getAccessToken = (provider: any, checkLoaclStorage: any) => {\n    return oauthService?.getAccessToken && oauthService.getAccessToken(provider, checkLoaclStorage);\n};\n\nexport const removeAccessToken = (provider: any) => {\n    oauthService.removeAccessToken(provider);\n}\n"]}
{"version":3,"file":"utils.js","sourceRoot":"./","sources":["src/util/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// declare const X2JS: any;\n// @ts-ignore\nimport X2JS from 'x2js';\nimport _ from 'lodash';\nexport const DataType = {\n    INTEGER : 'integer',\n    BIG_INTEGER : 'big_integer',\n    SHORT : 'short',\n    FLOAT : 'float',\n    BIG_DECIMAL : 'big_decimal',\n    DOUBLE : 'double',\n    LONG : 'long',\n    BYTE : 'byte',\n    STRING : 'string',\n    CHARACTER : 'character',\n    TEXT : 'text',\n    DATE : 'date',\n    TIME : 'time',\n    TIMESTAMP : 'timestamp',\n    DATETIME : 'datetime',\n    LOCALDATETIME : 'localdatetime',\n    BOOLEAN : 'boolean',\n    LIST : 'list',\n    CLOB : 'clob',\n    BLOB : 'blob'\n}\nexport const DEFAULT_FORMATS = {\n    DATE : \"yyyy-MM-dd\",\n    TIME : \"HH:mm:ss\",\n    TIMESTAMP : \"timestamp\",\n    DATETIME : \"yyyy-MM-ddTHH:mm:ss\",\n    LOCALDATETIME : \"yyyy-MM-ddTHH:mm:ss\",\n    DATETIME_ORACLE : \"yyyy-MM-dd HH:mm:ss\",\n    DATE_TIME : \"yyyy-MM-dd HH:mm:ss\"\n}\nconst REGEX = {\n    SNAKE_CASE: /[A-Z]/g,\n    ANDROID: /Android/i,\n    IPHONE: /iPhone/i,\n    IPOD: /iPod/i,\n    IPAD: /iPad/i,\n    MAC: /Mac/i,\n    ANDROID_TABLET: /android|android 3.0|xoom|sch-i800|playbook|tablet|kindle/i,\n    MOBILE: /Mobile/i,\n    WINDOWS: /Windows Phone/i,\n    SUPPORTED_IMAGE_FORMAT: /\\.(bmp|gif|jpe|jpg|jpeg|tif|tiff|pbm|png|ico)$/i,\n    SUPPORTED_FILE_FORMAT: /\\.(txt|js|css|html|script|properties|json|java|xml|smd|xmi|sql|log|wsdl|vm|ftl|jrxml|yml|yaml|md|less|jsp)$/i,\n    SUPPORTED_AUDIO_FORMAT: /\\.(mp3|ogg|webm|wma|3gp|wav|m4a)$/i,\n    SUPPORTED_VIDEO_FORMAT: /\\.(mp4|ogg|webm|wmv|mpeg|mpg|avi|mov)$/i,\n    PAGE_RESOURCE_PATH: /^\\/pages\\/.*\\.(js|css|html|json)$/,\n    MIN_PAGE_RESOURCE_PATH: /.*(page.min.html)$/,\n    VALID_EMAIL: /^[a-zA-Z][\\w.+]+@[a-zA-Z_]+?\\.[a-zA-Z.]{1,4}[a-zA-Z]$/,\n    VALID_WEB_URL: /^(http[s]?:\\/\\/)(www\\.){0,1}[a-zA-Z0-9=:?\\/\\.\\-]+(\\.[a-zA-Z]{2,5}[\\.]{0,1})?/,\n    VALID_WEBSOCKET_URL: /^(ws[s]?:\\/\\/)(www\\.){0,1}[a-zA-Z0-9=:?\\/\\.\\-]+(\\.[a-zA-Z]{2,5}[\\.]{0,1})?/,\n    VALID_RELATIVE_URL: /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/).*/,\n    REPLACE_PATTERN: /\\$\\{([^\\}]+)\\}/g,\n    ZIP_FILE: /\\.zip$/i,\n    EXE_FILE: /\\.exe$/i,\n    NO_QUOTES_ALLOWED: /^[^'|\"]*$/,\n    NO_DOUBLE_QUOTES_ALLOWED: /^[^\"]*$/,\n    VALID_HTML: /<[a-z][\\s\\S]*>/i,\n    VALID_PASSWORD: /^[0-9a-zA-Z-_.@&*!#$%]+$/,\n    SPECIAL_CHARACTERS: /[^A-Z0-9a-z_]+/i,\n    APP_SERVER_URL_FORMAT: /^(http[s]?:\\/\\/)(www\\.){0,1}[a-zA-Z0-9\\.\\-]+([:]?[0-9]{2,5}|\\.[a-zA-Z]{2,5}[\\.]{0,1})\\/+[^?#&=]+$/,\n    JSON_DATE_FORMAT: /\\d{4}-[0-1]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d{1,3}Z$)?/,\n    DATA_URL: /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i\n}\nconst NUMBER_TYPES = ['int', DataType.INTEGER, DataType.FLOAT, DataType.DOUBLE, DataType.LONG, DataType.SHORT, DataType.BYTE, DataType.BIG_INTEGER, DataType.BIG_DECIMAL];\nexport const noop = (...args: any) => { };\nfunction* idGenerator(token: any) {\n    let id = 1;\n    while (1) {\n        yield `${token}${id++}`;\n    }\n}\nexport const isValidWebURL = (url: string): boolean => {\n    return (REGEX.VALID_WEB_URL).test(url);\n};\n\n/*Function to check whether the specified object is a pageable object or not.*/\nexport const isPageable = (obj: any): boolean => {\n    const pageable = {\n        'content': [],\n        'first': true,\n        'last': true,\n        'number': 0,\n        'numberOfElements': 10,\n        'size': 20,\n        'sort': null,\n        'totalElements': 10,\n        'totalPages': 1\n    };\n    // paginated object may or may not contain 'empty' property. In either case, Pageable should return as true.\n    const paginatedObj = _.omit(obj, 'empty');\n    return (_.isEqual(_.keys(pageable), _.keys(paginatedObj).sort()));\n};\n\nexport class IDGenerator {\n    private generator: Iterator<any>;\n\n    constructor(key: string) {\n        this.generator = idGenerator(key);\n    }\n\n    public nextUid(): string {\n        return this.generator.next().value;\n    }\n}\n// ToDo - variable seperation\nexport const hasCordova = () => {\n    return !!window['cordova'];\n};\n\nexport const removeExtraSlashes = function (url) {\n    const base64regex = /^data:image\\/([a-z]{2,});base64,/;\n    if (_.isString(url)) {\n        /*\n        * support for mobile apps having local file path url starting with file:/// and\n        * support for base64 format\n        * */\n        if (_.startsWith(url, 'file:///') || base64regex.test(url)) {\n            return url;\n        }\n        return url.replace(new RegExp('([^:]\\/)(\\/)+', 'g'), '$1');\n    }\n};\nexport const isDefined = (v: any) => 'undefined' !== typeof v;\nexport const isObject = (v: any) => null !== v && 'object' === typeof v;\n/* returns true if the provided data type matches number type */\nexport const isNumberType = (type: any): boolean => {\n    return (NUMBER_TYPES.indexOf(extractType(type).toLowerCase()) !== -1);\n};\n\n/*\n* extracts and returns the last bit from full typeRef of a field\n* e.g. returns 'String' for typeRef = 'java.lang.String'\n* @params: {typeRef} type reference\n*/\nexport const extractType = (typeRef: string): string => {\n    let type;\n    if (!typeRef) {\n        return DataType.STRING;\n    }\n    type = typeRef && typeRef.substring(typeRef.lastIndexOf('.') + 1);\n    type = type && type.toLowerCase();\n    type = type === DataType.LOCALDATETIME ? DataType.DATETIME : type;\n    return type;\n};\n/*Function to check if date time type*/\nexport const isDateTimeType = (type: string) => {\n    if (_.includes(type, '.')) {\n        type = _.toLower(extractType(type));\n    }\n    return _.includes([DataType.DATE, DataType.TIME, DataType.TIMESTAMP, DataType.DATETIME, DataType.LOCALDATETIME], type);\n};\nexport const getValidJSON = (content: any) => {\n    if (!content) {\n        return undefined;\n    }\n    try {\n        const parsedIntValue = parseInt(content, 10);\n        /*obtaining json from editor content string*/\n        return isObject(content) || !isNaN(parsedIntValue) ? content : JSON.parse(content);\n    } catch (e) {\n        /*terminating execution if new variable object is not valid json.*/\n        return undefined;\n    }\n};\nexport const xmlToJson = (xmlString: string) => {\n    const x2jsObj = new X2JS({ 'emptyNodeForm': 'content', 'attributePrefix': '', 'enableToStringFunc': false });\n    let json = x2jsObj.xml2js(xmlString);\n    if (json) {\n        json = _.get(json, Object.keys(json)[0]);\n    }\n    return json;\n};\n/*\n * Util method to replace patterns in string with object keys or array values\n * Examples:\n * Utils.replace('Hello, ${first} ${last} !', {first: 'wavemaker', last: 'ng'}) --> Hello, wavemaker ng\n * Utils.replace('Hello, ${0} ${1} !', ['wavemaker','ng']) --> Hello, wavemaker ng\n * Examples if parseError is true:\n * Utils.replace('Hello, {0} {1} !', ['wavemaker','ng']) --> Hello, wavemaker ng\n */\nexport const replace = (template: any, map: any, parseError?: boolean) => {\n    let regEx = REGEX.REPLACE_PATTERN;\n    if (!template) {\n        return;\n    }\n    if (parseError) {\n        regEx = /\\{([^\\}]+)\\}/g;\n    }\n\n    return template.replace(regEx, function (match: any, key: any) {\n        return _.get(map, key);\n    });\n};\n/**\n * prepare a blob object based on the content and content type provided\n * if content is blob itself, simply returns it back\n * @param val\n * @param valContentType\n * @returns {*}\n */\nexport const getBlob = (val: any, valContentType?: any) => {\n    if (val instanceof Blob) {\n        return val;\n    }\n    const jsonVal = getValidJSON(val);\n    if (jsonVal && jsonVal instanceof Object) {\n        val = new Blob([JSON.stringify(jsonVal)], { type: valContentType || 'application/json' });\n    } else {\n        val = new Blob([val], { type: valContentType || 'text/plain' });\n    }\n    return val;\n};\n\n/**\n * Returns a deep cloned replica of the passed object/array\n * @param object object/array to clone\n * @returns a clone of the passed object\n */\nexport const getClonedObject = (object: any) => {\n    return _.cloneDeep(object);\n};\n/**\n * this method checks if a given string starts with the given string\n */\nexport const stringStartsWith = (str: string, startsWith: string, ignoreCase?: boolean): boolean => {\n    if (!str) {\n        return false;\n    }\n\n    const regEx = new RegExp('^' + startsWith, ignoreCase ? 'i' : '');\n\n    return regEx.test(str);\n};\n/*function to check if fn is a function and then execute*/\nexport function triggerFn(fn: any, ...argmnts: any) {\n    /* Use of slice on arguments will make this function not optimizable\n    * https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    * */\n\n    let start = 1;\n    const len = arguments.length, args = new Array(len - start);\n    for (start; start < len; start++) {\n        args[start - 1] = arguments[start];\n    }\n\n    if (_.isFunction(fn)) {\n        return fn.apply(null, args);\n    }\n}\n\n/*\n * Util method to find the value of a key in the object\n * if key not found and create is true, an object is created against that node\n * Examples:\n * var a = {\n *  b: {\n *      c : {\n *          d: 'test'\n *      }\n *  }\n * }\n * Utils.findValue(a, 'b.c.d') --> 'test'\n * Utils.findValue(a, 'b.c') --> {d: 'test'}\n * Utils.findValue(a, 'e') --> undefined\n * Utils.findValue(a, 'e', true) --> {} and a will become:\n * {\n *   b: {\n *      c : {\n *          d: 'test'\n *      }\n *  },\n *  e: {\n *  }\n * }\n */\nexport const findValueOf = (obj: any, key: any, create?: any) => {\n\n    if (!obj || !key) {\n        return;\n    }\n\n    if (!create) {\n        return _.get(obj, key);\n    }\n\n    const parts = key.split('.'),\n        keys: any = [];\n\n    let skipProcessing;\n\n    parts.forEach((part: any) => {\n        if (!parts.length) { // if the part of a key is not valid, skip the processing.\n            skipProcessing = true;\n            return false;\n        }\n\n        const subParts = part.match(/\\w+/g);\n        let subPart;\n\n        while (subParts.length) {\n            subPart = subParts.shift();\n            keys.push({ 'key': subPart, 'value': subParts.length ? [] : {} }); // determine whether to create an array or an object\n        }\n    });\n\n    if (skipProcessing) {\n        return undefined;\n    }\n\n    keys.forEach((_key: any) => {\n        let tempObj = obj[_key.key];\n        if (!isObject(tempObj)) {\n            tempObj = getValidJSON(tempObj);\n            if (!tempObj) {\n                tempObj = _key.value;\n            }\n        }\n        obj[_key.key] = tempObj;\n        obj = tempObj;\n    });\n\n    return obj;\n};\n"]}
{"version":3,"file":"file-upload.util.js","sourceRoot":"./","sources":["src/util/file-upload.util.ts"],"names":[],"mappings":"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","sourcesContent":["import { triggerFn } from './utils';\n\nimport { NotifyPromise } from './notify-promise';\n\n// declare const _: any;\nimport _ from 'lodash';\n\nenum HTTP_EVENT_TYPE {\n    Sent = 0,\n    UploadProgress = 1,\n    ResponseHeader = 2,\n    DownloadProgress = 3,\n    Response= 4,\n    User = 5\n}\n\nenum UPLOAD_STATUS {\n    QUEUED        = 'queued',\n    IN_PROGRESS   = 'inprogress',\n    SUCCESS       = 'success',\n    ERROR         = 'error',\n    ABORTED       = 'abort'\n}\n\nfunction transformEvent(event: any) {\n    event.target = event.target || {\n        status: event.responseCode,\n        response: event.response\n    };\n    return event;\n}\n\nclass FileTransferObject {\n    name: string;\n    size: string;\n    status: string;\n    transferFn: Function;\n    abortFn: Function;\n    promise: any;\n    progress: number;\n\n    constructor(file: any, transferFn: any, promise: any, abortFn: any) {\n        this.name = file.name;\n        this.size = file.size || '';\n        this.status = UPLOAD_STATUS.QUEUED;\n        this.transferFn = transferFn;\n        this.promise = promise;\n        this.abortFn = abortFn;\n    }\n\n    start() {\n        if (this.status === UPLOAD_STATUS.QUEUED) {\n            this.status = UPLOAD_STATUS.IN_PROGRESS;\n            triggerFn(this.transferFn);\n        }\n    }\n\n    then(onSuccess: any, onError: any, onProgress: any) {\n        const self = this;\n        this.promise.then(function (event: any) {\n            self.status = UPLOAD_STATUS.SUCCESS;\n            triggerFn(onSuccess, event);\n        }, function (event: any) {\n            self.status = UPLOAD_STATUS.ERROR;\n            triggerFn(onError, event);\n        }, function (event: any) {\n            self.progress = Math.round(event.loaded / event.total * 100);\n            triggerFn(onProgress, event);\n        });\n        return this;\n    }\n\n    finally(onFinal?: any) {\n        this.promise.finally(onFinal);\n    }\n\n    /* aborts the file upload */\n    abort() {\n        this.status = UPLOAD_STATUS.ABORTED;\n        triggerFn(this.abortFn);\n        this.finally();\n    }\n\n}\n\nclass AjaxFileTransferObject extends FileTransferObject {\n    constructor(file: any, transferFn: any, promise: any, abortFn: any) {\n        super(file, transferFn, promise, abortFn);\n    }\n}\n\n/* upload file using fileTransfer */\nfunction uploadWithFileTransfer(file: any, url: any, options: any) {}\n\nfunction appendFileToFormData(file: any, fd: any, options: any) {\n    /* append file to form data */\n    if (_.isArray(file)) {\n        _.forEach(file, function (fileObject: any) {\n            fd.append(options.paramName, fileObject.content || fileObject, fileObject.name);\n        });\n    } else if (_.isObject(file)) {\n        fd.append(options.paramName, file.content || file, file.name);\n    }\n}\n\n/* upload file with ajax calling */\nfunction uploadWithAjax(file: any, httpService: any, fd: any, url: any, options: any) {\n    const cloneFD = new FormData();\n    const iterate = (value: any, key: any) => {\n        const fileObject = (_.isArray(value) ? value[0] : value);\n        if (!(fileObject instanceof File || fileObject instanceof Blob)) {\n            cloneFD.append(key, value);\n        }\n    };\n    // The foreeach method on form data doesn't exist in IE. Hence we check if it exists\n    // or else use the lodash forEach\n    if (fd.forEach) {\n        fd.forEach(iterate);\n    } else {\n        _.forEach(fd, iterate);\n    }\n    appendFileToFormData(file, cloneFD, options);\n\n    const promise = new NotifyPromise((resolve: any, reject: any, notify: any) => {\n        // ToDo - variable seperation\n        const request = httpService.upload(url, cloneFD).subscribe((event: any) => {\n            if (event.type === HTTP_EVENT_TYPE.UploadProgress) {\n                const uploadProgress = Math.round(100 * event.loaded / event.total);\n                notify(uploadProgress);\n            }\n\n            if (event.type === HTTP_EVENT_TYPE.Response) {\n                resolve(event.body);\n            }\n        }, (error: any) => {\n            reject(error);\n        });\n        file._uploadProgress = request;\n    });\n\n    return promise;\n}\n\n/* upload the file - IE9 support */\n// function uploadWithIframe(file, url, options) {}\n\n/* upload the next file depending on the status */\nfunction starNextFileTransfer(fts: any) {\n    const ft = _.find(fts, function (f: any) {\n        return f.status === UPLOAD_STATUS.QUEUED;\n    });\n    if (ft) {\n        ft.start();\n        ft.finally(starNextFileTransfer.bind(undefined, fts));\n    }\n}\n\n/* upload the max no of files at once i.e. two at once based on max*/\nfunction startFileTransfers(fts: any, max: any) {\n    let i = 0;\n    const len = fts.length;\n    while (i < max && i < len) {\n        starNextFileTransfer(fts);\n        i++;\n    }\n}\n\nfunction isMobileApp() {\n    return false;\n}\n\n/**\n * This function uploads the file to the given url endpoint.\n *\n * @param file file to upload\n * @param url http endpoint to which the file has to be submitted.\n * @param options\n * @returns a promise to listen for success, event, onProgress.\n *  One can also abort the upload by simply calling abort function.\n */\nexport function upload(files: any, httpService: any, fd: any, config: any, options?: any) {\n    options = _.extend({\n        'paramName' : config.fileParamName\n    }, options);\n    return uploadWithAjax(files, httpService, fd, config.url, options);\n    // let fileTransfers = [],\n    //     url = config.uploadUrl;\n    // options = _.extend({\n    //     'paramName' : config.fileParamName\n    // }, options);\n    //\n    // if (isMobileApp()) {\n    //     _.forEach(files, function (file) {\n    //         fileTransfers.push(uploadWithFileTransfer(file, url, options));\n    //     });\n    // } else if ((window as any).FormData) {\n    //     _.forEach(files, function (file) {\n    //         fileTransfers.push(uploadWithAjax(file, url, options));\n    //     });\n    // } else {\n    //     _.forEach(files, function (file) {\n    //         fileTransfers.push(uploadWithIframe(file, url, options));\n    //     });\n    // }\n    // startFileTransfers(fileTransfers, 2);\n    // return fileTransfers;\n}\n"]}
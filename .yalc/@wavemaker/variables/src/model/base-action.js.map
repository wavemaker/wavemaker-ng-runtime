{"version":3,"file":"base-action.js","sourceRoot":"./","sources":["src/model/base-action.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataSource } from \"../types/types\";\nimport DatasetUtil from '../util/dataset-util';\nimport {getTarget, getTargetNodeKey, getTargetObj, setValueToNode} from \"../util/variable/variables.utils\";\nimport {getClonedObject} from \"../util/utils\";\n\ndeclare const _;\nexport abstract class BaseAction {\n\n    protected _id: string;\n\n    name: string;\n    owner: string;\n    category: string;\n    dataSet: any;\n    dataBinding: any;\n    _context: any;\n    isMuted = false;\n\n    execute(operation, options) {\n        let returnVal;\n        switch (operation) {\n            case DataSource.Operation.GET_NAME:\n                returnVal = this.name;\n                break;\n            case DataSource.Operation.GET_UNIQUE_IDENTIFIER:\n                returnVal = this._id;\n                break;\n            case DataSource.Operation.GET_CONTEXT_IDENTIFIER:\n                returnVal = this._context;\n                break;\n        }\n        return returnVal;\n    }\n\n    invokeOnParamChange(obj, newVal, oldVal) {\n        const target = obj.target,\n            root = getTarget(this),\n            targetObj = getTargetObj(obj, root, this),\n            targetNodeKey = getTargetNodeKey(target);\n        if ((newVal === oldVal && _.isUndefined(newVal)) || (_.isUndefined(newVal) && (!_.isUndefined(oldVal) || !_.isUndefined(targetObj[targetNodeKey])))) {\n            return;\n        }\n        // Skip cloning for blob column\n        if (!_.includes(['blob', 'file'], obj.type)) {\n            newVal = getClonedObject(newVal);\n        }\n        setValueToNode(target, obj, root, this, newVal); // cloning newVal to keep the source clean\n        return Promise.resolve(this);\n    }\n\n    getData() {\n        return this.dataSet;\n    }\n\n    setData(dataSet: any) {\n        if (DatasetUtil.isValidDataset(dataSet)) {\n            this.dataSet = dataSet;\n        }\n        return this.dataSet;\n    }\n\n    getValue(key: string, index: number) {\n        return DatasetUtil.getValue(this.dataSet, key, index);\n    }\n\n    setValue(key: string, value: any) {\n        return DatasetUtil.setValue(this.dataSet, key, value);\n    }\n\n    getItem(index: number) {\n        return DatasetUtil.getItem(this.dataSet, index);\n    }\n\n    /**\n     *\n     * @param index, a number in ideal case\n     *        it can be the object to be replaced by the passed value\n     * @param value\n     * @returns {any}\n     */\n    setItem(index: any, value: any) {\n        return DatasetUtil.setItem(this.dataSet, index, value);\n    }\n\n    addItem(value: any, index: number) {\n        return DatasetUtil.addItem(this.dataSet, value, index);\n    }\n\n    removeItem(index: any, exactMatch: boolean) {\n        return DatasetUtil.removeItem(this.dataSet, index, exactMatch);\n    }\n\n    clearData() {\n        this.dataSet = DatasetUtil.getValidDataset();\n        return this.dataSet;\n    }\n\n    getCount() {\n        return DatasetUtil.getCount(this.dataSet);\n    }\n\n    init() {\n    }\n\n    mute() {\n        this.isMuted = true;\n    }\n\n    unmute() {\n        this.isMuted = false;\n    }\n}\n"]}